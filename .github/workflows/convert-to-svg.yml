# This is a basic workflow to help you get started with Actions

name: Convert and Deploy Mermaid Diagrams in Markdown to Github Pages

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  #pull_request:
  #  branches: [ "main" ]
# Allows you to run this workflow manually from the Actions tab
#  workflow_dispatch:


# Set permissions of the GITHUB_TOKEN to allow deployment to Github Pages
permissions:
 contents: read
 pages: write
 id-token: write
  
  
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains build job 
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
     - name: Checkout
       uses: actions/checkout@v3

     - name: Generate Diagram in Markdown Files
       run: |
        cd docs
        # loop over every file ends with .md to convert Mermaid markup to SVG
        for file in $(find . -name '*.md'); do
         [ -f "$file" ] || continue
         npx -p @mermaid-js/mermaid-cli mmdc --input $file --output $file
        done

     - name: Setup Pages
       uses: actions/configure-pages@v2
       
     - name: Build with Jekyll
       uses: actions/jekyll-build-pages@v1
       with: # pass parameters (Source and destination)
        source: ./docs
        destination: ./_site
        
     - name: Upload artifact
       uses: actions/upload-pages-artifact@v1

  # Deployment job
  deploy:
    environment:
     name: github-pages
     url: ${{ steps.deployment.outputs.page_url }}
    run-on: ubuntu-latest
    needs: build
    steps:
     - name: Test
       run: echo
     - name: Deplay to Github Pages
       id: deployment
       uses: actions/deploy-pages@v1
      uses: actions/deploy--pagespages@v1
